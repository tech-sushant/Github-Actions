name: "Release New Version"

on:
  workflow_dispatch:
    inputs:
      release_title:
        description: 'Title for the release'
        required: true
      release_body:
        description: 'Content for the release notes'
        required: false
        default: ''

permissions:
  contents: write

jobs:
  publish:
    name: "Publish to NPM"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v2

      - name: "Set up Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: 22.x
          registry-url: "https://registry.npmjs.org/"

      - name: "Install dependencies"
        run: npm ci

      - name: "Build project"
        run: npm run build

      - name: "Get current version from package.json"
        id: get_version
        run: echo "version=v$(node -p 'require(\"./package.json\").version')" >> $GITHUB_OUTPUT

      - name: "Get previous Git tag"
        id: get_previous_tag
        run: echo "tag=$(git tag --sort=-creatordate | grep '^v' | sed -n '2p')" >> $GITHUB_OUTPUT

      - name: "Generate release body with merged PRs"
        id: generate_body
        run: |
          LAST_TAG=${{ steps.get_previous_tag.outputs.tag }}
          CURRENT_TAG=${{ steps.get_version.outputs.version }}

          echo "Comparing $LAST_TAG...$CURRENT_TAG"

          PR_LIST=$(gh pr list --state merged --search "$LAST_TAG..$CURRENT_TAG" --json title --jq '.[] | "- " + .title')
          
          echo "body=**Merged Pull Requests:**%0A$PR_LIST%0A%0A**Full Changelog:** https://github.com/${{ github.repository }}/compare/$LAST_TAG...$CURRENT_TAG" >> $GITHUB_OUTPUT

      - name: "Set Git identity"
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: "Create Git tag for version"
        run: git tag ${{ steps.get_version.outputs.version }}

      - name: "Push tag to origin"
        run: git push origin ${{ steps.get_version.outputs.version }}

      - name: "Publish to NPM"
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: "Create GitHub Release"
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: ${{ github.event.inputs.release_title }}
          body: |
            ${{ steps.generate_body.outputs.body }}

            Published by ${{ github.actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
