name: "Release New Version"

on:
  workflow_dispatch:
    inputs:
      release_title:
        description: "Title for the release"
        required: true
      release_body:
        description: "Additional description (optional)"
        required: false
        default: ""

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Important to fetch all tags!

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.x
          registry-url: "https://registry.npmjs.org/"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Get current version from package.json
        id: get_version
        run: |
          VERSION="v$(node -p "require('./package.json').version")"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Get previous tag
        id: tags
        run: |
          TAGS=($(git tag --sort=-creatordate | head -n 2))
          if [ "${#TAGS[@]}" -lt 2 ]; then
            echo "No previous tag found"
            echo "previous_tag=" >> $GITHUB_OUTPUT
          else
            echo "previous_tag=${TAGS[1]}" >> $GITHUB_OUTPUT
          fi

      - name: Fetch merged PRs between tags
        id: pr_list
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          PREV="${{ steps.tags.outputs.previous_tag }}"

          if [ -z "$PREV" ]; then
            echo "No previous tag found to compare PRs."
            echo "prs_output=No previous tag available to list PRs." >> $GITHUB_OUTPUT
          else
            PR_LIST=$(gh pr list --state merged --search "$PREV..$VERSION" --json title,number --jq '.[] | "- PR #" + (.number|tostring) + ": " + .title')
            if [ -z "$PR_LIST" ]; then
              echo "prs_output=No PRs were merged in this release." >> $GITHUB_OUTPUT
            else
              echo "prs_output=$PR_LIST" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Set Git user
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Create Git tag
        run: git tag ${{ steps.get_version.outputs.version }}

      - name: Push tag to origin
        run: git push origin ${{ steps.get_version.outputs.version }}

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: ${{ github.event.inputs.release_title }}
          body: |
            ${{ steps.github.event.inputs.release_body }}

            **Merged Pull Requests:**
            ${{ steps.pr_list.outputs.prs_output }}

            Published by ${{ github.actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
