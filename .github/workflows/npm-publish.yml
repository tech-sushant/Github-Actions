name: "Release New Version"

on:
  workflow_dispatch:
    inputs:
      release_title:
        description: 'Title for the release'
        required: true
      release_body:
        description: 'Content for the release notes'
        required: true
        default: ''

permissions:
  contents: write

jobs:
  publish:
    name: "Publish to NPM"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed for full commit history

      - name: "Set up Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: 22.x
          registry-url: "https://registry.npmjs.org/"

      - name: "Install dependencies"
        run: npm ci

      - name: "Create build"
        run: npm run build

      - name: "Get current version from package.json"
        id: get_version
        run: echo "version=v$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT

      - name: "Get previous version from package.json history"
        id: get_prev_version
        run: |
          PREV=$(git log -p -n 1 -G'"version":' -- package.json | grep '"version"' | sed -E 's/.*"version": ?"([0-9]+\.[0-9]+\.[0-9]+)".*/\1/' | tail -n 1)
          if [ -z "$PREV" ]; then
            echo "No previous version found"
            echo "prev=" >> $GITHUB_OUTPUT
          else
            echo "Found previous version: v$PREV"
            echo "prev=v$PREV" >> $GITHUB_OUTPUT
          fi

      - name: "Set release title and body"
        id: set_release_info
        run: |
          TITLE="${{ github.event.inputs.release_title }}"
          BODY="${{ github.event.inputs.release_body }}"
          CURR="${{ steps.get_version.outputs.version }}"
          PREV="${{ steps.get_prev_version.outputs.prev }}"

          if [ -n "$PREV" ]; then
            CHANGELOG="**Full Changelog:** https://github.com/${{ github.repository }}/compare/$PREV...$CURR"
            BODY="$BODY"$'\n\n'"$CHANGELOG"
          fi

          echo "title=$TITLE" >> $GITHUB_OUTPUT
          echo "body=$BODY" >> $GITHUB_OUTPUT

      - name: "Set Git user"
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: "Create Git tag for version"
        run: git tag ${{ steps.get_version.outputs.version }}

      - name: "Push tag to origin"
        run: git push origin ${{ steps.get_version.outputs.version }}

      - name: "Publish to NPM"
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: "Create GitHub Release"
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: ${{ steps.set_release_info.outputs.title }}
          body: |
            ${{ steps.set_release_info.outputs.body }}

            Published by ${{ github.actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
